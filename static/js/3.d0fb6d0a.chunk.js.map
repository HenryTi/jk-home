{"version":3,"sources":["me/about.tsx","me/tab.tsx"],"names":["about_About","_super","About","_this","apply","this","arguments","showLogs","tonva_tools","push","react","header","logs","map","v","i","key","className","tslib_es6","prototype","render","right","onClick","tab_Me","Me","about","changePassword","_a","sent","meComponent","Object","index_module","user","name","nick","id","icon","tonva_react_form","left","src","userSpan","String","substr","exit","showLogout","rows","aboutRows","type","component","iconClass","text","logOutRows","bk","size","undefined","showLogin","loginTop","concat","values","__webpack_exports__"],"mappings":"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","file":"static/js/3.d0fb6d0a.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\n\r\nexport class About extends React.Component {\r\n    private showLogs = () => {\r\n        nav.push(<Page header=\"Logs\">\r\n            <div>NODE_ENV: {process.env.NODE_ENV}</div>\r\n            {nav.logs.map((v,i) => {\r\n                return <div key={i} className=\"px-3 py-1\">{v}</div>;\r\n            })}\r\n        </Page>);\r\n    }\r\n\r\n    render() {\r\n        let right = <button className='btn btn-success btn-sm' onClick={this.showLogs}>log</button>;\r\n        return <Page header=\"关于百灵威\" right={right}>\r\n            <div className='m-3'>\r\n                百灵威集团\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import * as React from 'react';\r\nimport { nav, User, Page, EditMeInfo, Image } from 'tonva-tools';\r\nimport { Prop, Media, IconText, FA, PropGrid, LMR } from 'tonva-react-form';\r\nimport { About } from './about';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\nimport { jnkTop } from './loginTop';\r\n//import ChangePasswordPage from './changePassword';\r\n\r\nclass Me extends React.Component {\r\n    private exit() {\r\n        nav.showLogout();\r\n        /*\r\n        if (confirm('退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号')) {\r\n            nav.logout();\r\n        }\r\n        */\r\n    }\r\n\r\n    private about = () => nav.push(<About />);\r\n\r\n    private changePassword = async () => {\r\n        await nav.changePassword();\r\n        // nav.push(<ChangePasswordPage />);\r\n    }\r\n\r\n    private meComponent = observer(() => {\r\n        let { user } = nav;\r\n        let { name, nick, id, icon } = user;\r\n        return <LMR className=\"py-2 cursor-pointer w-100\"\r\n            left={<Image className=\"w-3c h-3c mr-3\" src={icon} />}\r\n            right={<FA className=\"align-self-end\" name=\"chevron-right\" />}\r\n            onClick={() => {\r\n                nav.push(<EditMeInfo />)\r\n            }}>\r\n            <div>\r\n                <div>{userSpan(name, nick)}</div>\r\n                <div className=\"small\"><span className=\"text-muted\">ID:</span> {id > 10000 ? id : String(id + 10000).substr(1)}</div>\r\n            </div>\r\n        </LMR>\r\n    });\r\n\r\n    render() {\r\n        const { user } = nav;\r\n        let aboutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <IconText iconClass=\"text-info mr-2\" icon=\"smile-o\" text=\"关于百灵威\" />,\r\n                onClick: this.about\r\n            },\r\n            '',\r\n        ];\r\n\r\n        let logOutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                bk: '',\r\n                component: <button className=\"btn btn-danger w-100\" onClick={this.exit}>\r\n                    <FA name=\"sign-out\" size=\"lg\" /> 退出登录\r\n                </button>\r\n            },\r\n        ];\r\n        let rows: Prop[];\r\n        if (user === undefined) {\r\n            rows = aboutRows;\r\n            rows.push('');\r\n            rows.push(\r\n                {\r\n                    type: 'component',\r\n                    component: <button className=\"btn btn-success w-100\" onClick={() => nav.showLogin(undefined, jnkTop, true)}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 请登录\r\n                    </button>\r\n                },\r\n            );\r\n        }\r\n        else {\r\n            rows = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <this.meComponent />\r\n                },\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <IconText iconClass=\"text-info mr-2\" icon=\"key\" text=\"修改密码\" />,\r\n                    onClick: this.changePassword\r\n                },\r\n            ]\r\n            rows.push(...aboutRows, ...logOutRows);\r\n        }\r\n        return <PropGrid rows={rows} values={{}} />;\r\n    }\r\n}\r\n\r\nexport default Me;\r\n\r\nfunction userSpan(name: string, nick: string): JSX.Element {\r\n    return nick ?\r\n        <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n        : <b>{name}</b>\r\n}"],"sourceRoot":""}