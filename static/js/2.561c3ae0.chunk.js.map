{"version":3,"sources":["me/about.tsx","me/center.ts","me/changePassword.tsx","tonva-react-form/components/image.tsx","me/tab.tsx"],"names":["about_About","_super","About","_this","apply","this","arguments","showLogs","tonva_tools","push","react","header","logs","map","v","i","key","className","tslib_es6","prototype","render","right","onClick","me_center","Center","changePassword","param","post","_a","sent","undefined","schema","name","type","required","uiSchema","items","orgPassword","widget","label","maxLength","placeholder","newPassword","newPassword1","submit","ChangePasswordPage","onSubmit","context","Promise","values","form","data","setValue","replace","back","requiredFlag","onButtonClick","defaultImage","Image","props","style","src","startsWith","substr","tab_Me","Me","about","exit","showLogout","rows","user","aboutRows","component","tonva_react_form","iconClass","icon","text","logOutRows","bk","size","showLogin","nick","id","left","userSpan","concat","__webpack_exports__"],"mappings":"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","file":"static/js/2.561c3ae0.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Page, nav } from 'tonva-tools';\r\n\r\nexport class About extends React.Component {\r\n    private showLogs = () => {\r\n        nav.push(<Page header=\"Logs\">\r\n            <div>NODE_ENV: {process.env.NODE_ENV}</div>\r\n            {nav.logs.map((v,i) => {\r\n                return <div key={i} className=\"px-3 py-1\">{v}</div>;\r\n            })}\r\n        </Page>);\r\n    }\r\n\r\n    render() {\r\n        let right = <button className='btn btn-success btn-sm' onClick={this.showLogs}>log</button>;\r\n        return <Page header=\"关于百灵威\" right={right}>\r\n            <div className='m-3'>\r\n                百灵威集团\r\n            </div>\r\n        </Page>;\r\n    }\r\n}","import {CenterApi, User} from 'tonva-tools';\r\n\r\nclass Center extends CenterApi {\r\n    async changePassword(param: {orgPassword:string, newPassword:string}) {\r\n        return await this.post('tie/reset-password', param);\r\n    }\r\n}\r\n\r\nconst center = new Center('tv/', undefined);\r\nexport default center;","import * as React from 'react';\r\nimport {Page, nav, Form, Context, Schema, UiSchema, UiPasswordItem} from 'tonva-tools';\r\nimport center from './center';\r\n\r\nconst schema: Schema = [\r\n    {name:'orgPassword', type: 'string', required: true},\r\n    {name:'newPassword', type: 'string', required: true},\r\n    {name:'newPassword1', type: 'string', required: true},\r\n    {name: 'submit', type: 'submit'},\r\n];\r\n\r\nconst uiSchema: UiSchema = {\r\n    items: {\r\n        orgPassword: {\r\n            widget: 'password',\r\n            label: '原密码',\r\n            maxLength: 60,\r\n            placeholder: '输入原来的密码'\r\n        } as UiPasswordItem,\r\n        newPassword: {\r\n            widget: 'password',\r\n            label: '新密码',\r\n            maxLength: 60,\r\n            placeholder: '输入新设的密码'\r\n        } as UiPasswordItem,\r\n        newPassword1: {\r\n            widget: 'password',\r\n            label: '确认密码',\r\n            maxLength: 60,\r\n            placeholder: '再次输入新设密码'\r\n        } as UiPasswordItem,\r\n        submit: {\r\n            widget: 'button',\r\n            className: 'btn btn-primary',\r\n            label: '提交'\r\n        }\r\n    }\r\n}\r\n\r\nexport default class ChangePasswordPage extends React.Component {\r\n    private onSubmit = async (name:string, context:Context):Promise<string> => {\r\n        let values:any = context.form.data;\r\n        let {orgPassword, newPassword, newPassword1} = values;\r\n        if (newPassword !== newPassword1) {\r\n            context.setValue('newPassword', '');\r\n            context.setValue('newPassword1', '');\r\n            return '新密码错误，请重新输入';\r\n        }\r\n        let ret = await center.changePassword({orgPassword: orgPassword, newPassword:newPassword});\r\n        if (ret === false) {\r\n            context.setValue('orgPassword', '');\r\n            return '原密码错误';\r\n        }\r\n        nav.replace(<Page header=\"修改密码\" back=\"close\">\r\n            <div className=\"m-3  text-success\">\r\n                密码修改成功！\r\n            </div>\r\n        </Page>);\r\n        return;\r\n    }\r\n    render() {\r\n        return <Page header=\"修改密码\">\r\n            <Form className=\"m-3\"\r\n                schema={schema} uiSchema={uiSchema}\r\n                requiredFlag={false}\r\n                onButtonClick={this.onSubmit} />\r\n        </Page>;\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport { observable } from 'mobx';\r\nimport { observer } from 'mobx-react';\r\n\r\nexport interface ImageProps {\r\n    src: string;\r\n    className?: string;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nconst defaultImage = 'http://101.200.46.56/imgs/Bear-icon.png';\r\n\r\nexport function Image(props: ImageProps) {\r\n    /*\r\n    @observable private src: string;\r\n    async componentWillMount() {\r\n        let {src} = this.props;\r\n        if (!src) {\r\n            this.src = defaultImage;\r\n            return;\r\n        }\r\n        if (src.startsWith(':') === false) {\r\n            this.src = src;\r\n            return;\r\n        }\r\n        this.src = 'http://localhost:3015/res/' + src.substr(1);\r\n    }\r\n    render() {\r\n    */\r\n        let {className, style, src} = props;\r\n        if (!src) {\r\n            src = defaultImage;\r\n        }\r\n        else if (src.startsWith(':') === true) {\r\n            src = 'http://localhost:3015/res/' + src.substr(1);\r\n        }\r\n        return <img src={src} className={className} style={style} />;\r\n    //}\r\n}\r\n","import * as React from 'react';\r\n//import {Media, PropGrid, Prop, FA, IconText, TonvaForm, FormRow, SubmitResult, Fields} from 'tonva-react-form';\r\nimport { nav, User, Page, EditMeInfo } from 'tonva-tools';\r\nimport { Prop, Media, IconText, FA, PropGrid, LMR } from 'tonva-react-form';\r\n//import {store} from 'store';\r\nimport { consts } from '../home/consts';\r\n//import mainApi from 'mainApi';\r\nimport { About } from './about';\r\nimport ChangePasswordPage from './changePassword';\r\nimport { Image } from 'tonva-react-form/components/image';\r\n\r\nclass Me extends React.Component {\r\n    private exit() {\r\n        nav.showLogout();\r\n        /*\r\n        if (confirm('退出当前账号不会删除任何历史数据，下次登录依然可以使用本账号')) {\r\n            nav.logout();\r\n        }\r\n        */\r\n    }\r\n\r\n    private about = () => nav.push(<About />);\r\n\r\n    private changePassword = () => {\r\n        nav.push(<ChangePasswordPage />);\r\n    }\r\n    render() {\r\n        const { user } = nav;\r\n        let aboutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                component: <IconText iconClass=\"text-info mr-2\" icon=\"smile-o\" text=\"关于百灵威\" />,\r\n                onClick: this.about\r\n            },\r\n            '',\r\n        ];\r\n\r\n        let logOutRows: Prop[] = [\r\n            '',\r\n            {\r\n                type: 'component',\r\n                bk: '',\r\n                component: <button className=\"btn btn-danger w-100\" onClick={this.exit}>\r\n                    <FA name=\"sign-out\" size=\"lg\" /> 退出登录\r\n                </button>\r\n            },\r\n        ];\r\n        let rows: Prop[];\r\n        if (user === undefined) {\r\n            rows = aboutRows;\r\n            rows.push('');\r\n            rows.push(\r\n                {\r\n                    type: 'component',\r\n                    component: <button className=\"btn btn-success w-100\" onClick={() => nav.showLogin(undefined, true)}>\r\n                        <FA name=\"sign-out\" size=\"lg\" /> 请登录\r\n                    </button>\r\n                },\r\n            );\r\n        }\r\n        else {\r\n            let { name, nick, id, icon } = user;\r\n            rows = [\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <LMR className=\"py-2 cursor-pointer w-100\"\r\n                        left={<Image className=\"w-3c h-3c mr-3\" src={icon} />}\r\n                        right={<FA className=\"align-self-end\" name=\"chevron-right\" />}\r\n                        onClick={() => {\r\n                            nav.push(<EditMeInfo />)\r\n                        }}>\r\n                        <div>\r\n                            <div>{userSpan(name, nick)}</div>\r\n                            <div>{id}</div>\r\n                        </div>\r\n                    </LMR>\r\n                },\r\n                '',\r\n                {\r\n                    type: 'component',\r\n                    component: <IconText iconClass=\"text-info mr-2\" icon=\"key\" text=\"修改密码\" />,\r\n                    onClick: this.changePassword\r\n                },\r\n            ]\r\n            rows.push(...aboutRows, ...logOutRows);\r\n        }\r\n        return <PropGrid rows={rows} values={{}} />;\r\n    }\r\n}\r\n\r\nexport default Me;\r\n\r\nfunction userSpan(name: string, nick: string): JSX.Element {\r\n    return nick ?\r\n        <><b>{nick} &nbsp; <small className=\"muted\">{name}</small></b></>\r\n        : <b>{name}</b>\r\n}"],"sourceRoot":""}